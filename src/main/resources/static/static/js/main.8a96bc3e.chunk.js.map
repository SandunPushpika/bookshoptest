{"version":3,"sources":["logo.svg","Component/create.component.js","Component/edit.component.js","Service/service.js","Component/update.component.js","Component/index.component.js","Component/profits.component.js","Component/homepage.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Create","props","onChangeId","bind","onChangeName","onChangeAuthor","onChangeSprice","onChangeCostprice","onChangeNumber","onSubmit","state","Id","Name","Author","Sprice","Costprice","Number","e","this","setState","target","value","preventDefault","axios","post","params","BookName","Auther","sprice","cprice","count","then","res","console","log","data","catch","err","window","location","href","className","type","onChange","Component","Edit","get","OnButtonClick","onButtonClick","onNameboxChange","onChangeDelete","onDelete","onLoadTable","onSetSidebarOpen","onUpdateinfo","namebox","deleteid","sidebarOpen","books","values","BookID","map","item","AutherName","SellingPrice","CostPrice","Count","response","error","message","valuess","reload","confirm","open","placeholder","onClick","book","key","id","Index","onChangeBookID","onChangeQty","onAddtoCart","findfullamount","onBill","qty","fullamount","intamounts","tablevalues","datavalues","variable","variable2","push","date","amount","it","total","i","length","profits","onSearch","onDateChange","Date","respond","ID","QTY","Amount","Profit","homecomponent","onButtonClicked","App","to","exact","path","component","Homepage","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a96bc3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react';\r\nimport './styles.css'\r\nimport axios from 'axios';\r\nexport default class Create extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        \r\n\r\n        this.onChangeId=this.onChangeId.bind(this);\r\n        this.onChangeName=this.onChangeName.bind(this);\r\n        this.onChangeAuthor=this.onChangeAuthor.bind(this);\r\n        this.onChangeSprice=this.onChangeSprice.bind(this);\r\n        this.onChangeCostprice=this.onChangeCostprice.bind(this);\r\n        this.onChangeNumber=this.onChangeNumber.bind(this);\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n\r\n        this.state={\r\n            Id:'',\r\n            Name:'',\r\n            Author:'',\r\n            Sprice:'',\r\n            Costprice:'',\r\n            Number:''\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    onChangeCostprice(e){\r\n        this.setState({\r\n            Costprice:e.target.value\r\n        });\r\n    }\r\n    onChangeNumber(e){\r\n        this.setState({\r\n            Number:e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeSprice(e){\r\n        this.setState({\r\n            Sprice: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeId(e){\r\n        this.setState({\r\n            Id: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeName(e){\r\n        this.setState({\r\n            Name:e.target.value\r\n        });\r\n    }\r\n    onChangeAuthor(e){\r\n        this.setState({\r\n            Author: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e){\r\n        try{\r\n            e.preventDefault();\r\n         const obj={\r\n            BookId: this.state.Id,\r\n            BookName: this.state.Name,\r\n            AuthorName: this.state.Author,\r\n            Sellingprice: this.state.Sprice,\r\n            CostPrice: this.state.Costprice,\r\n            Count: this.state.Number\r\n        };\r\n        axios.post(\"https://bookshopmanager.herokuapp.com/addbook\",null,{\r\n            params:{\r\n                Id: this.state.Id,\r\n                BookName: this.state.Name,\r\n                Auther: this.state.Author,\r\n                sprice: this.state.Sprice,\r\n                cprice: this.state.Costprice,\r\n                count: this.state.Number  }}).then(res =>{\r\n            console.log(res);\r\n            console.log(res.data);\r\n        }).catch((err)=> console.log(err));\r\n        \r\n        this.setState({\r\n            Id:'',\r\n            Name:'',\r\n            Author:'',\r\n            Sprice:'',\r\n            Costprice:'',\r\n            Number:''\r\n        });\r\n        window.location.href='/edit';\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n        render(){\r\n            return(\r\n                <div className=\"formalayout\">\r\n                    <h2>ADD A NEW BOOK</h2>\r\n                    <form className=\"addform\" onSubmit={this.onSubmit}>\r\n                        ID:<br/>\r\n                        <input type=\"text\" className=\"idbox\" value={this.state.Id} onChange={this.onChangeId} /><br/>\r\n                        Book Name:<br/>\r\n                        <input type=\"text\" className=\"namebox\" value={this.state.Name} onChange={this.onChangeName} /><br/>\r\n                        Author:<br/>\r\n                        <input type=\"text\" className=\"addressbox\" value={this.state.Author} onChange={this.onChangeAuthor}/><br/>\r\n                        Selling Price<br/>\r\n                        <input type=\"text\" className=\"sellingprice\" value={this.state.Sprice} onChange={this.onChangeSprice}/><br/>\r\n\r\n                        Cost Price<br/>\r\n                        <input type=\"text\" className=\"costprice\" value={this.state.Costprice} onChange={this.onChangeCostprice}/><br/>\r\n\r\n                        Count<br/>\r\n                        <input type=\"text\" className=\"numberbox\" value={this.state.Number} onChange={this.onChangeNumber}/><br/>\r\n                        <br/>\r\n                        <input type=\"submit\" className=\"button\" value=\"Add Info\"/>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n}","import React,{Component} from 'react';\r\nimport service from '../Service/service';\r\nimport axios from 'axios';\r\nimport './styles.css';\r\nimport {BrowserRouter as Router,Switch,Route,Link, useRouteMatch} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport updatecomponent from './update.component';\r\n\r\nexport default class Edit extends Component{\r\n    \r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n        this.OnButtonClick=this.onButtonClick.bind(this);\r\n        this.onNameboxChange=this.onNameboxChange.bind(this);\r\n        this.onChangeDelete=this.onChangeDelete.bind(this);\r\n        this.onDelete=this.onDelete.bind(this);\r\n        this.onLoadTable=this.onLoadTable.bind(this);\r\n        this.onSetSidebarOpen=this.onSetSidebarOpen.bind(this);\r\n        this.onChangeId=this.onChangeId.bind(this);\r\n        this.onChangeName=this.onChangeName.bind(this);\r\n        this.onChangeAuthor=this.onChangeAuthor.bind(this);\r\n        this.onChangeSprice=this.onChangeSprice.bind(this);\r\n        this.onChangeCostprice=this.onChangeCostprice.bind(this);\r\n        this.onChangeNumber=this.onChangeNumber.bind(this);\r\n        this.onUpdateinfo=this.onUpdateinfo.bind(this);\r\n        this.state={\r\n            namebox:'',\r\n            deleteid:'',\r\n            sidebarOpen:false,\r\n            Id:'',\r\n            Name:'',\r\n            Author:'',\r\n            Sprice:'',\r\n            Costprice:'',\r\n            Number:'',\r\n            books:[],\r\n            values:[]\r\n        };\r\n    }\r\n\r\n    onChangeId(e){\r\n        this.setState({Id:e.target.value});\r\n        if(e!=null){\r\n            axios.get(\"https://bookshopmanager.herokuapp.com/findupdatingbook\",{params: {BookID:e.target.value}}).then((res) =>{\r\n                this.setState({\r\n                    books: res.data\r\n                });\r\n                this.state.books.map(item=>\r\n                    {\r\n                        this.setState({\r\n                            Name: item.BookName,\r\n                            Author: item.AutherName,\r\n                            Sprice:item.SellingPrice,\r\n                            Costprice:item.CostPrice,\r\n                            Number:item.Count\r\n                        })\r\n                    }\r\n                );\r\n                console.log(this.state.books);\r\n            });\r\n        }\r\n    }\r\n    onChangeName(e){\r\n        this.setState({Name:e.target.value});\r\n    }\r\n    onChangeAuthor(e){\r\n        this.setState({Author:e.target.value});\r\n    }\r\n    onChangeSprice(e){\r\n        this.setState({Sprice:e.target.value});\r\n    }\r\n    onChangeCostprice(e){\r\n        this.setState({Costprice:e.target.value});\r\n    }\r\n    onChangeNumber(e){\r\n        this.setState({Number:e.target.value});\r\n    }\r\n\r\n    onButtonClick(){\r\n        window.location.href='/create';\r\n        console.log(\"hello button worked\");\r\n    }\r\n    onLoadTable(){\r\n        axios.get(\"https://bookshopmanager.herokuapp.com/allbooks\").then((response) => {\r\n            console.log(response);\r\n            this.setState({books: response.data});\r\n            console.log(this.state.books);\r\n        }).catch(function(error){\r\n                console.log(\"there is an error \"+error.message);\r\n                throw error;\r\n        });\r\n    }\r\n    onUpdateinfo(e){\r\n        e.preventDefault();\r\n\r\n        var valuess=[{\r\n            \r\n                BookID:this.state.Id,\r\n                BookName:this.state.Name,\r\n                AutherName:this.state.Author,\r\n                CostPrice:this.state.Costprice,\r\n                SellingPrice:this.state.Sprice,\r\n                Count:this.state.Number\r\n            \r\n        }];\r\n        \r\n        axios.post(\"https://bookshopmanager.herokuapp.com/updatestockinfo\",valuess).then((res)=>{\r\n            console.log(res);\r\n            window.location.reload();\r\n        });\r\n      \r\n    }\r\n    onNameboxChange(e){\r\n        this.setState({\r\n            namebox:e.target.value\r\n        });\r\n    }\r\n\r\n    onDelete(){\r\n        if(window.confirm(\"Do you want to delete these?\")){\r\n            axios.get(`https://bookshopmanager.herokuapp.com/deletebook/${this.state.deleteid}`).then((res)=>{\r\n                console.log(res);\r\n                this.setState({\r\n                    books:res.data\r\n                })\r\n            }).catch((err)=>{console.log(err)});\r\n            this.onLoadTable();\r\n            this.setState({\r\n                deleteid:''\r\n            });\r\n            console.log(\"onChane pressed\");\r\n            console.log(this.state.deleteid);\r\n        }else{\r\n            console.log(\"cancel pressed\");\r\n        }\r\n        \r\n    }\r\n    onChangeDelete(e){\r\n        this.setState({\r\n            deleteid: e.target.value\r\n        });\r\n    }\r\n    onSetSidebarOpen(open) {\r\n        window.location.href='#updateinfo';\r\n      }\r\n\r\n    onSubmit(){\r\n            axios.get(\"https://bookshopmanager.herokuapp.com/findbook\",{params: {BookName:this.state.namebox}}).then((res) =>{\r\n                this.setState({\r\n                    books: res.data\r\n                });\r\n                console.log(this.state.books);\r\n            });\r\n\r\n            console.log(\"Submit pressed\"); \r\n            console.log(this.state.namebox);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"https://bookshopmanager.herokuapp.com/allbooks\").then((response) => {\r\n            console.log(response);\r\n            this.setState({books: response.data});\r\n            console.log(this.state.books);\r\n        }).catch(function(error){\r\n                console.log(\"there is an error \"+error.message);\r\n                throw error;\r\n        });\r\n    }\r\n\r\n   \r\n   \r\n    \r\n    render(){\r\n        return(\r\n            \r\n            <div>\r\n               \r\n               <div className=\"clearfix\">\r\n                    <h3>Stock Manager</h3>\r\n                    <div className=\"searchform\">\r\n                        <input type=\"text\" className=\"textBoxx\" placeholder=\"Book Name\" value={this.state.namebox} onChange={this.onNameboxChange}/>\r\n                        <button type=\"submit\" className=\"addbutton\" onClick={this.onSubmit}>Search</button>\r\n                        \r\n                    </div>\r\n                    <button type=\"submit\" className=\"addbutton update\" onClick={this.onSetSidebarOpen}>Update</button>\r\n                    <button className=\"addbutton\" onClick={this.onButtonClick}>+ Add Book</button>\r\n               </div>\r\n               <div className=\"tableclass overflow-auto\">\r\n               <table className=\"table table-striped mb-0 table-resposive table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>BookId</td>\r\n                            <td>BookName</td>\r\n                            <td>AutherName</td>\r\n                            <td>Cost Price</td>\r\n                            <td>Selling Price</td>\r\n                            <td>Count</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.books.map(\r\n                                book =>\r\n                                \r\n                                <tr key={book.BookID}>\r\n                                    <td>{book.BookID}</td>\r\n                                    <td>{book.BookName}</td>\r\n                                    <td>{book.AutherName}</td>\r\n                                    <td>{book.CostPrice}</td>\r\n                                    <td>{book.SellingPrice}</td>\r\n                                    <td>{book.Count}</td>\r\n                                    \r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n\r\n               </table>\r\n               </div>\r\n               <div className=\"deleteform\">\r\n                        <input type=\"text\" placeholder=\"Book ID\" className=\"textBoxx\" value={this.state.deleteid} onChange={this.onChangeDelete}/>\r\n                        <button type=\"submit\" className=\"addbutton\" onClick={this.onDelete}>Delete</button>\r\n               </div>\r\n                <div id=\"updateinfo\" className=\"updatepanel\">\r\n                        <h1>EDIT INFO</h1>\r\n                        <form className=\"addform\" onSubmit={this.onUpdateinfo}>\r\n                        ID:<br/>\r\n                        <input type=\"text\" className=\"idbox\"  value={this.state.Id} onChange={this.onChangeId} /><br/>\r\n                        Book Name:<br/>\r\n                        <input type=\"text\" className=\"namebox\" value={this.state.Name} onChange={this.onChangeName} /><br/>\r\n                        Author:<br/>\r\n                        <input type=\"text\" className=\"addressbox\" value={this.state.Author} onChange={this.onChangeAuthor}/><br/>\r\n                        Selling Price<br/>\r\n                        <input type=\"text\" className=\"sellingprice\" value={this.state.Sprice} onChange={this.onChangeSprice}/><br/>\r\n\r\n                        Cost Price<br/>\r\n                        <input type=\"text\" className=\"costprice\" value={this.state.Costprice} onChange={this.onChangeCostprice}/><br/>\r\n\r\n                        Count<br/>\r\n                        <input type=\"text\" className=\"numberbox\" value={this.state.Number} onChange={this.onChangeNumber}/><br/>\r\n                        <br/>\r\n                        <input type=\"submit\" className=\"button update\" value=\"Update Info\"/>\r\n                        <button className=\"button update\" onClick={this.onUpdateinfo}/>\r\n                    </form>\r\n                    \r\n      \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst CONNECTION_URL=\"https://bookshopmanager.herokuapp.com/allbooks\";\r\n\r\nclass BookService{\r\n    findbooks(){\r\n       return axios.get(CONNECTION_URL);\r\n    }\r\n}\r\n\r\nexport default new BookService();","import React,{Component} from 'react';\r\n\r\nexport default class updateinfo extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeId=this.onChangeId.bind(this);\r\n        this.onChangeName=this.onChangeName.bind(this);\r\n        this.onChangeAuthor=this.onChangeAuthor.bind(this);\r\n        this.onChangeSprice=this.onChangeSprice.bind(this);\r\n        this.onChangeCostprice=this.onChangeCostprice.bind(this);\r\n        this.onChangeNumber=this.onChangeNumber.bind(this);\r\n        this.state={\r\n            Id:'',\r\n            Name:'',\r\n            Author:'',\r\n            Sprice:'',\r\n            Costprice:'',\r\n            Number:''\r\n        };\r\n    }\r\n\r\n    onChangeId(e){\r\n        this.setState({Id:e.target.value});\r\n    }\r\n    onChangeName(e){\r\n        this.setState({Name:e.target.value});\r\n    }\r\n    onChangeAuthor(e){\r\n        this.setState({Author:e.target.value});\r\n    }\r\n    onChangeSprice(e){\r\n        this.setState({Sprice:e.target.value});\r\n    }\r\n    onChangeCostprice(e){\r\n        this.setState({CostPrice:e.target.value});\r\n    }\r\n    onChangeNumber(e){\r\n        this.setState({Number:e.target.value});\r\n    }\r\n    render(){\r\n      return(\r\n        <div>\r\n        <form className=\"addform\" onSubmit={this.onSubmit}>\r\n        ID:<br/>\r\n        <input type=\"text\" className=\"idbox\" value={this.state.Id} onChange={this.onChangeId} /><br/>\r\n        Book Name:<br/>\r\n        <input type=\"text\" className=\"namebox\" value={this.state.Name} onChange={this.onChangeName} /><br/>\r\n        Author:<br/>\r\n        <input type=\"text\" className=\"addressbox\" value={this.state.Author} onChange={this.onChangeAuthor}/><br/>\r\n        Selling Price<br/>\r\n        <input type=\"text\" className=\"sellingprice\" value={this.state.Sprice} onChange={this.onChangeSprice}/><br/>\r\n\r\n        Cost Price<br/>\r\n        <input type=\"text\" className=\"costprice\" value={this.state.Costprice} onChange={this.onChangeCostprice}/><br/>\r\n\r\n        Count<br/>\r\n        <input type=\"text\" className=\"numberbox\" value={this.state.Number} onChange={this.onChangeNumber}/><br/>\r\n        <br/>\r\n        <input type=\"submit\" className=\"button\" value=\"Add Info\"/>\r\n     </form>\r\n    \r\n     </div>\r\n      );  \r\n    }\r\n}","import React,{Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles.css';\r\nimport axios from 'axios';\r\n\r\nexport default class Index extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeBookID=this.onChangeBookID.bind(this);\r\n        this.onChangeQty=this.onChangeQty.bind(this);\r\n        this.onAddtoCart=this.onAddtoCart.bind(this);\r\n        this.findfullamount=this.findfullamount.bind(this);\r\n        this.onBill=this.onBill.bind(this);\r\n\r\n        this.state={\r\n            id:'',\r\n            qty:'',\r\n            fullamount:'',\r\n            intamounts:[],\r\n            tablevalues:[],\r\n            datavalues:[]\r\n        };\r\n    }\r\n\r\n    onBill(){\r\n        axios.post(\"https://bookshopmanager.herokuapp.com/Bill\",this.state.tablevalues).then((res)=>\r\n                console.log(res.data)\r\n        ).catch((err)=>console.log(err));\r\n\r\n        this.setState({\r\n            id:'',\r\n            qty:'',\r\n            fullamount:'',\r\n            intamounts:[],\r\n            tablevalues:[],\r\n            datavalues:[]\r\n        });\r\n    }\r\n\r\n    onChangeBookID(e){\r\n        this.setState({\r\n            id:e.target.value\r\n        });\r\n    }\r\n    onChangeQty(e){\r\n        this.setState({\r\n            qty:e.target.value\r\n        });\r\n    }\r\n    onAddtoCart(){\r\n        var variable=[];\r\n        var variable2=this.state.tablevalues;\r\n            axios.get(\"https://bookshopmanager.herokuapp.com/addtocart\",{params: {BookID: this.state.id, qty: this.state.qty}})\r\n            .then((res)=>{\r\n                //console.log(res.data);\r\n                variable=res.data;\r\n                variable.map(item=>\r\n                    variable2.push({\r\n                        BookID: item.BookID,\r\n                        BookName:item.BookName,\r\n                        SellingPrice: item.SellingPrice,\r\n                        qty:item.qty,\r\n                        date: item.date,\r\n                        amount:item.amount\r\n                    })\r\n                    );\r\n\r\n                    variable.map(it=>\r\n                            this.state.intamounts.push(it.amount)\r\n                        );\r\n\r\n                    this.setState({tablevalues:variable2, fullamount:variable2[0].amount});\r\n                    console.log(this.state.intamounts);\r\n                console.log(this.state.tablevalues);\r\n                this.findfullamount();\r\n            }).catch((err)=>{console.log(err)});\r\n            \r\n        //console.log(this.state.tablevalues);\r\n    }\r\n\r\n    findfullamount(){\r\n            let total=0;\r\n            for(let i=0;i<this.state.intamounts.length;i++){\r\n                total += this.state.intamounts[i];\r\n            }\r\n            this.setState({fullamount:total});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"clearfix maindiv\">\r\n                <h2>Total: {this.state.fullamount}</h2>\r\n                <div className=\"addToCart clearfix\">\r\n                        <input type=\"text\" className=\"textBoxx bookid\" placeholder=\"Book ID\" value={this.state.id} onChange={this.onChangeBookID}/>\r\n                        <input type=\"text\" className=\"textBoxx amount\" placeholder=\"Qty\" value={this.state.qty} onChange={this.onChangeQty}/>\r\n                        <button type=\"submit\" className=\"addbutton\" onClick={this.onAddtoCart} >+ Add to cart</button>\r\n               </div>\r\n                <table className=\"table table-striped mb-0 table-resposive table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                        <td>Book ID</td>\r\n                        <td>BookName</td>\r\n                        <td>Price</td>\r\n                        <td>Qty</td>\r\n                        <td>Date</td>\r\n                        <td>Amount</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        \r\n                        {this.state.tablevalues.map(\r\n                                book =>\r\n                                \r\n                                <tr key={book.BookID}>\r\n                                    <td>{book.BookID}</td>\r\n                                    <td>{book.BookName}</td>\r\n                                    <td>{book.SellingPrice}</td>\r\n                                    <td>{book.qty}</td>\r\n                                    <td>{book.date}</td>\r\n                                    <td>{book.amount}</td>\r\n                                    \r\n                                </tr>\r\n                            )}\r\n                    </tbody>\r\n\r\n                </table>\r\n                <button type=\"submit\" className=\"addbutton\" onClick={this.onBill} >BILL</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nclass profits extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onSearch=this.onSearch.bind(this);\r\n        this.onDateChange=this.onDateChange.bind(this);\r\n        this.state={\r\n            date:'',\r\n            tablevalues:[]\r\n        };\r\n    }\r\n    onDateChange(e){\r\n            this.setState({\r\n                date:e.target.value\r\n            });\r\n    }\r\n    onSearch(){\r\n        axios.get(\"https://bookshopmanager.herokuapp.com/profitbydate\",{params:{Date:this.state.date}}).then((res)=>{\r\n            console.log(\"data\", res.data);\r\n                        this.setState({tablevalues:res.data});\r\n        }\r\n        ).catch((err)=>console.log(err));\r\n    }\r\n    componentDidMount(){\r\n        axios.get(\"https://bookshopmanager.herokuapp.com/profits\").then((respond) =>\r\n         this.setState({tablevalues:respond.data})\r\n\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h2 className=\"center\">Profit Manager</h2>\r\n\r\n                <div className=\"Search\">\r\n                    <input type=\"text\" className=\"searchInput\" value={this.state.date} onChange={this.onDateChange}/>\r\n                    <button onClick={this.onSearch}>Search DATE</button>\r\n                </div>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Date</td>\r\n                            <td>BookID</td>\r\n                            <td>Qty</td>\r\n                            <td>Amount</td>\r\n                            <td>Profit</td>\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.tablevalues.map(item=>\r\n                            <tr>\r\n                                <td>{item.Date}</td>\r\n                                <td>{item.ID}</td>\r\n                                <td>{item.QTY}</td>\r\n                                <td>{item.Amount}</td>\r\n                                <td>{item.Profit}</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default profits;","import React,{Component} from 'react';\r\n\r\nexport default class homecomponent extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onButtonClicked=this.onButtonClicked.bind(this);\r\n    }\r\n    onButtonClicked(){\r\n        window.location.href='./edit';\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Homepagediv\">\r\n                    <h1>Simple BookShop Managing App for<br/>The Test Of FUTURE CAREERS BRIDGE</h1>\r\n                    <button onClick={this.onButtonClicked} >Go To See Stock</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom';\nimport Create from './Component/create.component';\nimport Edit from './Component/edit.component';\nimport Index from './Component/index.component';\nimport profits from './Component/profits.component';\nimport Homepage from './Component/homepage.component';\nimport 'react-app-polyfill/stable';\n\nclass App extends Component{\n    render(){\n      return(\n        <Router>\n          <div className=\"bodycontainer\">\n              <nav className=\"navigationbar clearfix\">\n                <Link to={'/'} className=\"name\">BookShop Manager</Link>\n                <div className=\"menus\">\n                  <ul className=\"list\">\n                      <li>\n                        <Link to={'/'} className=\"listitem\">Home</Link>\n                      </li>\n                      <li>\n                        <Link to={'/edit'} className=\"listitem\">Stock</Link>\n                      </li>\n                      <li>\n                        <Link to={'/create'} className=\"listitem\">Add Book</Link>\n                      </li>\n                      <li>\n                        <Link to={'/Index'} className=\"listitem\">Sellings</Link>\n                      </li>\n                      <li>\n                        <Link to={'/profits'} className=\"listitem\">Profit Manager</Link>\n                      </li>\n                      \n                  </ul>\n                </div>\n              </nav><br/>\n              <h1 className=\"center\">Welcome to BookShop Manager</h1>\n              <div className=\"componentrednder\">\n              <Switch>\n              <Route exact path='/' component={Homepage}/>\n                <Route exact path='/edit' component={Edit}/>\n                <Route exact path='/create' component={Create}/>\n                <Route exact path='/Index' component={Index}/>\n                <Route exact path='/profits' component={profits}/>\n              </Switch>\n              </div>\n             \n              <br/>\n              \n          </div>\n          \n        </Router>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n <BrowserRouter>\n  <App/>\n </BrowserRouter>,document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}